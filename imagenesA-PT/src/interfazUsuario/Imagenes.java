/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package interfazUsuario;

import imagenes.Control;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JScrollPane;

/**
 *
 * @author Manuel Domitsu
 */
public class Imagenes extends javax.swing.JFrame {

  /**
   * Creates new form Imagenes
   */
  public Imagenes() {
    initComponents();

    centraVentana();

    lienzo = new Lienzo();
    lienzo.setLocation(0, 0);
    lienzo.setPreferredSize(new Dimension(600, 400));
 //   lienzo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    scrollPane = new JScrollPane(lienzo);
    setLayout(new BorderLayout());
    add(scrollPane, BorderLayout.CENTER);
    setSize(500, 300);
    add(lienzo);
    control = new Control(this, lienzo);
  }

  /**
   * Este método centra la ventana de la aplicación sobre la pantalla
   */
  private void centraVentana() {
    //Obtiene el tamaño de la pantalla
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

    // Obtiene el tamaño de la ventana de la aplicación
    Dimension frameSize = getSize();

    // Se asegura que el tamaño de la ventana de la aplicación
    // no exceda el tamaño de la pantalla
    if (frameSize.height > screenSize.height) {
      frameSize.height = screenSize.height;
    }
    if (frameSize.width > screenSize.width) {
      frameSize.width = screenSize.width;
    }

    // Centra la ventana de la aplicación sobre la pantalla
    setLocation((screenSize.width - frameSize.width) / 2,
            (screenSize.height - frameSize.height) / 2);
  }


  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar = new javax.swing.JMenuBar();
        menuImagenes = new javax.swing.JMenu();
        opcionNueva = new javax.swing.JMenuItem();
        opcionCargar = new javax.swing.JMenuItem();
        opcionGuardar = new javax.swing.JMenuItem();
        opcioGuardarComo = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        opcionSalir = new javax.swing.JMenuItem();
        menuDibujar = new javax.swing.JMenu();
        opcionDibujar = new javax.swing.JMenuItem();
        menuFiltrar = new javax.swing.JMenu();
        menuConvolucion = new javax.swing.JMenu();
        opcionSuavizar = new javax.swing.JMenuItem();
        opcionIntensificar = new javax.swing.JMenuItem();
        opcionDetectorOrillas = new javax.swing.JMenuItem();
        menuTablasBusqueda = new javax.swing.JMenu();
        opcionInvertir = new javax.swing.JMenuItem();
        opcionFiltraColor = new javax.swing.JMenuItem();
        opcionAclaradoLineal = new javax.swing.JMenuItem();
        opcionAclaradoRaiz = new javax.swing.JMenuItem();
        opcionPosterizar = new javax.swing.JMenuItem();
        opcionBinarizar = new javax.swing.JMenuItem();
        menuConversionColores = new javax.swing.JMenu();
        opcionTonosGris = new javax.swing.JMenuItem();
        menuReescalamiento = new javax.swing.JMenu();
        opcionAclarar = new javax.swing.JMenuItem();
        opcionOscurecer = new javax.swing.JMenuItem();
        opcionAbrillantadoBandas = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        opcionRestaurar = new javax.swing.JMenuItem();
        menuTransformaciones = new javax.swing.JMenu();
        opcionEscalar = new javax.swing.JMenuItem();
        opcionRotar = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();
        opcionContenido = new javax.swing.JMenuItem();
        opcionAcerca = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Demo de Imágenes");

        menuImagenes.setMnemonic('f');
        menuImagenes.setText("Imágenes");
        menuImagenes.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
                menuImagenesMenuDeselected(evt);
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
            }
        });

        opcionNueva.setMnemonic('o');
        opcionNueva.setText("Nueva");
        opcionNueva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionNuevaActionPerformed(evt);
            }
        });
        menuImagenes.add(opcionNueva);

        opcionCargar.setMnemonic('s');
        opcionCargar.setText("Cargar");
        opcionCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionCargarActionPerformed(evt);
            }
        });
        menuImagenes.add(opcionCargar);

        opcionGuardar.setMnemonic('a');
        opcionGuardar.setText("Guardar");
        opcionGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionGuardarActionPerformed(evt);
            }
        });
        menuImagenes.add(opcionGuardar);

        opcioGuardarComo.setText("Guardar como");
        opcioGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcioGuardarComoActionPerformed(evt);
            }
        });
        menuImagenes.add(opcioGuardarComo);
        menuImagenes.add(jSeparator1);

        opcionSalir.setMnemonic('x');
        opcionSalir.setText("Salir");
        opcionSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionSalirActionPerformed(evt);
            }
        });
        menuImagenes.add(opcionSalir);

        menuBar.add(menuImagenes);

        menuDibujar.setMnemonic('e');
        menuDibujar.setText("Dibujar");
        menuDibujar.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
                menuDibujarMenuDeselected(evt);
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
            }
        });

        opcionDibujar.setMnemonic('t');
        opcionDibujar.setText("Dibujar");
        opcionDibujar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionDibujarActionPerformed(evt);
            }
        });
        menuDibujar.add(opcionDibujar);

        menuBar.add(menuDibujar);

        menuFiltrar.setText("Filtrar");
        menuFiltrar.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
                menuFiltrarMenuDeselected(evt);
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
            }
        });

        menuConvolucion.setText("Convolución");

        opcionSuavizar.setText("Suavizar");
        opcionSuavizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionSuavizarActionPerformed(evt);
            }
        });
        menuConvolucion.add(opcionSuavizar);

        opcionIntensificar.setText("Intensificar");
        opcionIntensificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionIntensificarActionPerformed(evt);
            }
        });
        menuConvolucion.add(opcionIntensificar);

        opcionDetectorOrillas.setText("Detector de Orillas");
        opcionDetectorOrillas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionDetectorOrillasActionPerformed(evt);
            }
        });
        menuConvolucion.add(opcionDetectorOrillas);

        menuFiltrar.add(menuConvolucion);

        menuTablasBusqueda.setText("Tablas de Búsqueda");

        opcionInvertir.setText("Invertir");
        opcionInvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionInvertirActionPerformed(evt);
            }
        });
        menuTablasBusqueda.add(opcionInvertir);

        opcionFiltraColor.setText("Filtra color");
        opcionFiltraColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionFiltraColorActionPerformed(evt);
            }
        });
        menuTablasBusqueda.add(opcionFiltraColor);

        opcionAclaradoLineal.setText("Aclarado Lineal");
        opcionAclaradoLineal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionAclaradoLinealActionPerformed(evt);
            }
        });
        menuTablasBusqueda.add(opcionAclaradoLineal);

        opcionAclaradoRaiz.setText("Aclarado raíz");
        opcionAclaradoRaiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionAclaradoRaizActionPerformed(evt);
            }
        });
        menuTablasBusqueda.add(opcionAclaradoRaiz);

        opcionPosterizar.setText("Posterizar");
        opcionPosterizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionPosterizarActionPerformed(evt);
            }
        });
        menuTablasBusqueda.add(opcionPosterizar);

        opcionBinarizar.setText("Binarizar");
        opcionBinarizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionBinarizarActionPerformed(evt);
            }
        });
        menuTablasBusqueda.add(opcionBinarizar);

        menuFiltrar.add(menuTablasBusqueda);

        menuConversionColores.setText("Conversión de colores");

        opcionTonosGris.setText("Tonos de gris");
        opcionTonosGris.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionTonosGrisActionPerformed(evt);
            }
        });
        menuConversionColores.add(opcionTonosGris);

        menuFiltrar.add(menuConversionColores);

        menuReescalamiento.setText("Reescalamiento");

        opcionAclarar.setText("Aclarar");
        opcionAclarar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionAclararActionPerformed(evt);
            }
        });
        menuReescalamiento.add(opcionAclarar);

        opcionOscurecer.setText("Oscurecer");
        opcionOscurecer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionOscurecerActionPerformed(evt);
            }
        });
        menuReescalamiento.add(opcionOscurecer);

        opcionAbrillantadoBandas.setText("Abrillantado de bandas");
        opcionAbrillantadoBandas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionAbrillantadoBandasActionPerformed(evt);
            }
        });
        menuReescalamiento.add(opcionAbrillantadoBandas);

        menuFiltrar.add(menuReescalamiento);
        menuFiltrar.add(jSeparator2);

        opcionRestaurar.setText("Restaurar");
        opcionRestaurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionRestaurarActionPerformed(evt);
            }
        });
        menuFiltrar.add(opcionRestaurar);

        menuBar.add(menuFiltrar);

        menuTransformaciones.setText("Transformaciones");
        menuTransformaciones.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
                menuTransformacionesMenuDeselected(evt);
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
            }
        });

        opcionEscalar.setText("Escalar");
        opcionEscalar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionEscalarActionPerformed(evt);
            }
        });
        menuTransformaciones.add(opcionEscalar);

        opcionRotar.setText("Rotar");
        opcionRotar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionRotarActionPerformed(evt);
            }
        });
        menuTransformaciones.add(opcionRotar);

        menuBar.add(menuTransformaciones);

        menuAyuda.setMnemonic('h');
        menuAyuda.setText("Ayuda");
        menuAyuda.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
                menuAyudaMenuDeselected(evt);
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
            }
        });

        opcionContenido.setMnemonic('c');
        opcionContenido.setText("Contenido");
        menuAyuda.add(opcionContenido);

        opcionAcerca.setMnemonic('a');
        opcionAcerca.setText("Acerca de");
        menuAyuda.add(opcionAcerca);

        menuBar.add(menuAyuda);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 179, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void opcionSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionSalirActionPerformed
      System.exit(0);
    }//GEN-LAST:event_opcionSalirActionPerformed

  private void opcionNuevaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionNuevaActionPerformed
    control.nuevaImagen();
  }//GEN-LAST:event_opcionNuevaActionPerformed

  private void opcionCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionCargarActionPerformed
    control.leeImagen();
  }//GEN-LAST:event_opcionCargarActionPerformed

  private void opcionGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionGuardarActionPerformed
    control.guardarImagen();
  }//GEN-LAST:event_opcionGuardarActionPerformed

  private void opcioGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcioGuardarComoActionPerformed
    control.guardaImagenComo();
  }//GEN-LAST:event_opcioGuardarComoActionPerformed

  private void opcionDibujarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionDibujarActionPerformed
    control.dibujaEnImagen();
  }//GEN-LAST:event_opcionDibujarActionPerformed

  private void opcionSuavizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionSuavizarActionPerformed
    control.suaviza();
  }//GEN-LAST:event_opcionSuavizarActionPerformed

  private void opcionIntensificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionIntensificarActionPerformed
    control.intensifica();
  }//GEN-LAST:event_opcionIntensificarActionPerformed

  private void opcionInvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionInvertirActionPerformed
    control.invertir();
  }//GEN-LAST:event_opcionInvertirActionPerformed

  private void opcionFiltraColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionFiltraColorActionPerformed
    control.eliminarVerdes();
  }//GEN-LAST:event_opcionFiltraColorActionPerformed

  private void opcionAclaradoLinealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionAclaradoLinealActionPerformed
    control.aclaradoLineal();
  }//GEN-LAST:event_opcionAclaradoLinealActionPerformed

  private void opcionAclaradoRaizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionAclaradoRaizActionPerformed
    control.aclaradoRaiz();
  }//GEN-LAST:event_opcionAclaradoRaizActionPerformed

  private void opcionPosterizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionPosterizarActionPerformed
    control.posterizar();
  }//GEN-LAST:event_opcionPosterizarActionPerformed

  private void opcionBinarizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionBinarizarActionPerformed
    control.binarizar();
  }//GEN-LAST:event_opcionBinarizarActionPerformed

  private void opcionTonosGrisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionTonosGrisActionPerformed
    control.toGrises();
  }//GEN-LAST:event_opcionTonosGrisActionPerformed

  private void opcionAclararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionAclararActionPerformed
    control.aclara();
  }//GEN-LAST:event_opcionAclararActionPerformed

  private void opcionOscurecerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionOscurecerActionPerformed
    control.oscurece();
  }//GEN-LAST:event_opcionOscurecerActionPerformed

  private void opcionAbrillantadoBandasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionAbrillantadoBandasActionPerformed
    control.ajustaBrillantezBandas();
  }//GEN-LAST:event_opcionAbrillantadoBandasActionPerformed

  private void opcionRestaurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionRestaurarActionPerformed
    control.restauraImagenOriginal();
  }//GEN-LAST:event_opcionRestaurarActionPerformed

  private void opcionEscalarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionEscalarActionPerformed
    control.escala();
  }//GEN-LAST:event_opcionEscalarActionPerformed

  private void opcionRotarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionRotarActionPerformed
    control.rota();
  }//GEN-LAST:event_opcionRotarActionPerformed

  private void menuImagenesMenuDeselected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuImagenesMenuDeselected
    lienzo.repaint();
  }//GEN-LAST:event_menuImagenesMenuDeselected

  private void menuDibujarMenuDeselected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuDibujarMenuDeselected
    lienzo.repaint();
  }//GEN-LAST:event_menuDibujarMenuDeselected

  private void menuFiltrarMenuDeselected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuFiltrarMenuDeselected
    lienzo.repaint();
  }//GEN-LAST:event_menuFiltrarMenuDeselected

  private void menuTransformacionesMenuDeselected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuTransformacionesMenuDeselected
    lienzo.repaint();
  }//GEN-LAST:event_menuTransformacionesMenuDeselected

  private void menuAyudaMenuDeselected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuAyudaMenuDeselected
    lienzo.repaint();
  }//GEN-LAST:event_menuAyudaMenuDeselected

  private void opcionDetectorOrillasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionDetectorOrillasActionPerformed
    control.detectorOrillas();
  }//GEN-LAST:event_opcionDetectorOrillasActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /*
     * Set the Nimbus look and feel
     */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the
     * default look and feel. For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(Imagenes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(Imagenes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(Imagenes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(Imagenes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /*
     * Create and display the form
     */
    java.awt.EventQueue.invokeLater(new Runnable() {

      public void run() {
        new Imagenes().setVisible(true);
      }
    });
  }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuConversionColores;
    private javax.swing.JMenu menuConvolucion;
    private javax.swing.JMenu menuDibujar;
    private javax.swing.JMenu menuFiltrar;
    private javax.swing.JMenu menuImagenes;
    private javax.swing.JMenu menuReescalamiento;
    private javax.swing.JMenu menuTablasBusqueda;
    private javax.swing.JMenu menuTransformaciones;
    private javax.swing.JMenuItem opcioGuardarComo;
    private javax.swing.JMenuItem opcionAbrillantadoBandas;
    private javax.swing.JMenuItem opcionAcerca;
    private javax.swing.JMenuItem opcionAclaradoLineal;
    private javax.swing.JMenuItem opcionAclaradoRaiz;
    private javax.swing.JMenuItem opcionAclarar;
    private javax.swing.JMenuItem opcionBinarizar;
    private javax.swing.JMenuItem opcionCargar;
    private javax.swing.JMenuItem opcionContenido;
    private javax.swing.JMenuItem opcionDetectorOrillas;
    private javax.swing.JMenuItem opcionDibujar;
    private javax.swing.JMenuItem opcionEscalar;
    private javax.swing.JMenuItem opcionFiltraColor;
    private javax.swing.JMenuItem opcionGuardar;
    private javax.swing.JMenuItem opcionIntensificar;
    private javax.swing.JMenuItem opcionInvertir;
    private javax.swing.JMenuItem opcionNueva;
    private javax.swing.JMenuItem opcionOscurecer;
    private javax.swing.JMenuItem opcionPosterizar;
    private javax.swing.JMenuItem opcionRestaurar;
    private javax.swing.JMenuItem opcionRotar;
    private javax.swing.JMenuItem opcionSalir;
    private javax.swing.JMenuItem opcionSuavizar;
    private javax.swing.JMenuItem opcionTonosGris;
    // End of variables declaration//GEN-END:variables
  Lienzo lienzo;
  JScrollPane scrollPane;
  Control control;
}
