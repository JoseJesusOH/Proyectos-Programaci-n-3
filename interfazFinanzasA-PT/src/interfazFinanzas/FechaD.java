/*
 * Fecha.java
 * Creada el 2 de diciembre del 2021 21:11 PM
 */
package interfazFinanzas;

import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import objetosServicio.*;

/**
 * Cuadro de dialogo que permite obtener una fecha, para asi poder buscar
 * egresos o ingresos por fecha.
 *
 * @author Equipo 1
 */
public class FechaD extends javax.swing.JDialog {
    Click so = new Click("/recursos/click1.wav");

    ImageIcon a = new ImageIcon(getClass().getResource("/recursos/aceptar-el-contorno-del-boton-circular.png"));
    ImageIcon b = new ImageIcon(getClass().getResource("/recursos/rehacer-simbolo-de-flecha.png"));
    ImageIcon c = new ImageIcon(getClass().getResource("/recursos/error.png"));
    ImageIcon d = new ImageIcon(getClass().getResource("/recursos/save.png"));
    ImageIcon e = new ImageIcon(getClass().getResource("/recursos/eliminar.png"));
    ImageIcon[] ar = {a, b, c, d, e};
    private Fecha fe;
    private StringBuffer respuesta;
    private int operacion;

    /**
     * Creates new form Fecha
     *
     * @param parent
     * @param tittle
     * @param modal
     * @param operacion
     * @param respuesta
     * @param fech
     */
    public FechaD(java.awt.Frame parent, String tittle, boolean modal, int operacion, StringBuffer respuesta, Fecha fech) {
        super(parent, tittle, modal);
        initComponents();
        this.fe = fech;
        this.respuesta = respuesta;
        this.operacion = operacion;
        botonAceptar.setIcon(ar[0]);
        botonRestaurar.setIcon(ar[1]);
        botonCancelar.setIcon(ar[2]);
        setSize(460, 320);
        centraCuadroDialogo(parent);
        setVisible(true);
    }

    private void centraCuadroDialogo(java.awt.Frame parent) {
        Dimension frameSize = parent.getSize();
        Point loc = parent.getLocation();

        Dimension dlgSize = getPreferredSize();

        setLocation((frameSize.width - dlgSize.width) / 2 + loc.x, (frameSize.height - dlgSize.height) / 2 + loc.y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        botonAceptar = new javax.swing.JButton();
        botonRestaurar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        desdePeriodo = new javax.swing.JLabel();
        campoTextoFechaHasta = new javax.swing.JTextField();
        desdePeriodo1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setLayout(null);

        botonAceptar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        botonAceptar.setText("Aceptar");
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });
        jPanel1.add(botonAceptar);
        botonAceptar.setBounds(10, 210, 120, 40);

        botonRestaurar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        botonRestaurar.setText("Restaurar");
        botonRestaurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRestaurarActionPerformed(evt);
            }
        });
        jPanel1.add(botonRestaurar);
        botonRestaurar.setBounds(150, 210, 140, 40);

        botonCancelar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(botonCancelar);
        botonCancelar.setBounds(310, 210, 120, 40);

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setLayout(null);

        desdePeriodo.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        desdePeriodo.setText("             Ingresa la fecha");
        jPanel2.add(desdePeriodo);
        desdePeriodo.setBounds(30, 20, 270, 40);

        campoTextoFechaHasta.setColumns(25);
        campoTextoFechaHasta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        campoTextoFechaHasta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoTextoFechaHastaActionPerformed(evt);
            }
        });
        campoTextoFechaHasta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoTextoFechaHastaKeyTyped(evt);
            }
        });
        jPanel2.add(campoTextoFechaHasta);
        campoTextoFechaHasta.setBounds(160, 80, 140, 30);

        desdePeriodo1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        desdePeriodo1.setText("Fecha ;");
        jPanel2.add(desdePeriodo1);
        desdePeriodo1.setBounds(10, 80, 130, 30);

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Formato: DD/MM/AAAA");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(160, 120, 170, 24);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(70, 40, 320, 150);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 450, 300);

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     * Evento oyente de boton aceptar dependiendo de las condiciones que se
     * apliquen este realizara diversas acciones evaluara campos de texto, que
     * los datos concuerden, etc y genera la fecha de apoyo.
     *
     * @param evt Evento oyente
     */
    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
              so.run();
        Thread hilo = Thread.currentThread();
        try {
            hilo.sleep(100);
        } catch (InterruptedException e) {
        }
        if (campoTextoFechaHasta.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Favor de no dejar espacios vacios");
        } else {
            if (validarFecha(campoTextoFechaHasta.getText()) == false) {
                JOptionPane.showMessageDialog(this, "El campo de texto fecha desde o hasta no concuerda con una fecha");
            } else if (validarDias(campoTextoFechaHasta.getText()) == false) {
                JOptionPane.showMessageDialog(this, "El campo de texto fecha desde o hasta tiene dias que no concuerdan");
            } else {
                Fecha fechaHasta = new Fecha(campoTextoFechaHasta.getText());
                int dia = fechaHasta.getDay();
                int mes = fechaHasta.getMonth();
                int year = fechaHasta.getYear();
                fe.setFecha(dia, mes, year);
                respuesta.delete(0, respuesta.length());
                respuesta.append(ConstantesGUI.ACEPTAR);
                dispose();
            }

        }

    }//GEN-LAST:event_botonAceptarActionPerformed
    /**
     * Metodo para evaluar la fecha si concuerde con el formato de una fecha
     *
     * @param fecha Fecha
     * @return si la fecha coincide con el formato regresa verdadero
     */
    public boolean validarFecha(String fecha) {
        String regexp = "\\d{1,2}/\\d{1,2}/\\d{4}";
        boolean p = Pattern.matches(regexp, fecha);
        return p;
    }

    /**
     * Evento que restaura los campos del cuadro de dialogo.
     *
     * @param evt Evento.
     */
    private void botonRestaurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRestaurarActionPerformed
               so.run();
        Thread hilo = Thread.currentThread();
        try {
            hilo.sleep(100);
        } catch (InterruptedException e) {
        }
        campoTextoFechaHasta.setText("");
    }//GEN-LAST:event_botonRestaurarActionPerformed
    /**
     * Metodo para valdiar los dias dde una fecha y que concuerden con los dias
     * del mes;
     *
     * @param fecha Fecha
     * @return si la fecha o no comple con los dias del mes
     */
    public boolean validarDias(String fecha) {
        int a = 0;
        int auxiliar = 1;
        String diaS = "";
        String mesS = "";
        String anhoS = "";
        int dia = 0;
        int mes = 0;
        int anho = 0;
        char array_caracteres[] = fecha.toCharArray();

        while (a < fecha.length()) {
            if (auxiliar == 1) {
                if (Character.isDigit(array_caracteres[a])) {
                    diaS += array_caracteres[a];
                } else {
                    a++;
                    auxiliar = 2;
                }
            }
            if (auxiliar == 2) {
                if (Character.isDigit(array_caracteres[a])) {
                    mesS += array_caracteres[a];
                } else {
                    a++;
                    auxiliar = 3;
                }
            }
            if (auxiliar == 3) {
                if (Character.isDigit(array_caracteres[a])) {
                    anhoS += array_caracteres[a];
                }
            }
            a++;
        }
        dia = Integer.valueOf(diaS);
        mes = Integer.valueOf(mesS);
        anho = Integer.valueOf(anhoS);
        if (anho % 4 == 0) {
            if (mes < 0 || mes > 12) {
                return false;
            } else {
                switch (mes) {
                    case 1:
                    case 3:
                    case 5:
                    case 7:
                    case 8:
                    case 10:
                    case 12:
                        if (dia < 0 || dia > 31) {
                            return false;
                        }
                        break;
                    case 2:
                        if (dia < 0 || dia > 29) {
                            return false;
                        }
                        break;
                    case 4:
                    case 6:
                    case 9:
                    case 11:
                        if (dia < 0 || dia > 30) {
                            return false;
                        }
                        break;
                    default:
                        break;
                }
            }
        } else {
            if (mes < 0 || mes > 12) {
                return false;
            } else {
                switch (mes) {
                    case 1:
                    case 3:
                    case 5:
                    case 7:
                    case 8:
                    case 10:
                    case 12:
                        if (dia < 0 || dia > 31) {
                            return false;
                        }
                        break;
                    case 2:
                        if (dia < 0 || dia > 28) {
                            return false;
                        }
                        break;
                    case 4:
                    case 6:
                    case 9:
                    case 11:
                        if (dia < 0 || dia > 30) {
                            return false;
                        }
                        break;
                    default:
                        break;
                }
            }
        }
        return true;
    }

    /**
     * Evento del boton cancelar que destruye el cuadro de dialogo.
     *
     * @param evt Evento
     */
    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
              so.run();
        Thread hilo = Thread.currentThread();
        try {
            hilo.sleep(100);
        } catch (InterruptedException e) {
        }
        dispose();
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void campoTextoFechaHastaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoTextoFechaHastaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoTextoFechaHastaActionPerformed
    /**
     * Evento del keyTpped para el campo de texto fecha que permite solo la
     * entrada de campos que concuerden con una fecha.
     *
     * @param evt Evento
     */
    private void campoTextoFechaHastaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoTextoFechaHastaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (campoTextoFechaHasta.getText().length() < 10) {

            if ((c < '0' || c > '9') && (c != (char) KeyEvent.VK_SLASH) && (c != (char) KeyEvent.VK_BACK_SPACE)) {
                evt.consume();
                JOptionPane.showMessageDialog(null, "Formato invalido", "Validar Fecha", JOptionPane.INFORMATION_MESSAGE);
            }

        } else {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_campoTextoFechaHastaKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonRestaurar;
    private javax.swing.JTextField campoTextoFechaHasta;
    private javax.swing.JLabel desdePeriodo;
    private javax.swing.JLabel desdePeriodo1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
