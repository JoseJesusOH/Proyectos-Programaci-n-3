/*
 * DlgSelectorFuentes.java
 */
package graficas;

import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Point;
import javax.swing.DefaultComboBoxModel;

/**
 * Este cuadro de dialogo permite seleccionar una fuente
 *
 * @author Manuel Domitsu
 */
public class DlgSelectorFuentes extends javax.swing.JDialog {

  /**
   * Constructor del cuadro de dialogo
   *
   * @param parent Frame sobre el que se dibuja el cuadro de dialogo
   * @param title Titulo del cuadro de dialogo
   * @param modal true si permite acceder fuera de los limites del cuadro de
   * dialogo, false en caso contrario
   * @param fuente Fuente seleccionada en el cuadro de dialogo
   */
  public DlgSelectorFuentes(java.awt.Frame parent, String title, boolean modal,
          Font fuente, DefaultComboBoxModel listaNombresFamiliaFuentes) {
    super(parent, title, modal);
    this.fuente = fuente;
    this.listaNombresFamiliaFuentes = listaNombresFamiliaFuentes;
    initComponents();

    lienzo = new LienzoFuentes();
    lienzo.setLocation(50, 70);
    lienzo.setSize(500, 100);
    lienzo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

    // Establece la fuente inicial para el texto de muestra
    lienzo.setFuente(fuente);
    
    add(lienzo);

    // Centra el cuadro de dialogo sobre el frame
    centraCuadroDialogo(parent);

    // Muestra el cuadro de diálogo
    setVisible(true);
  }

  /**
   * Este método centra el cuadro de dialogo sobre la ventana de la aplicación.
   *
   * @param parent Ventana sobre la que aparecerá el cuadro de diálogo
   */
  private void centraCuadroDialogo(java.awt.Frame parent) {
    // Obtiene el tamaño y posición de la ventana de la aplicación
    Dimension frameSize = parent.getSize();
    Point loc = parent.getLocation();

    // Obtiene el tamaño del cuadro de diálogo
    Dimension dlgSize = getPreferredSize();

    // Centra el cuadro de diálogo sobre la ventana padre
    setLocation((frameSize.width - dlgSize.width) / 2 + loc.x,
            (frameSize.height - dlgSize.height) / 2 + loc.y);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbFuentes = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cbEstilos = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        spTamanos = new javax.swing.JSpinner();
        btnAceptar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Familia de fuente");

        cbFuentes.setModel(listaNombresFamiliaFuentes);
        cbFuentes.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbFuentesPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cbFuentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFuentesActionPerformed(evt);
            }
        });

        jLabel2.setText("Estilo");

        cbEstilos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Plain", "Bold", "Italic", "Bold Italic" }));
        cbEstilos.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbEstilosPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cbEstilos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEstilosActionPerformed(evt);
            }
        });

        jLabel3.setText("Tamaño");

        spTamanos.setModel(new javax.swing.SpinnerNumberModel(18, 8, 36, 1));
        spTamanos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spTamanosStateChanged(evt);
            }
        });

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbFuentes, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnAceptar)
                        .addGap(27, 27, 27)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbEstilos, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spTamanos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbFuentes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cbEstilos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(spTamanos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 122, Short.MAX_VALUE)
                .addComponent(btnAceptar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  /**
   * Metodo oyente de la caja combinada para seleccionar la familia de fuente a
   * usar en la fuente
   *
   * @param evt Evento al que escucha
   */
  private void cbFuentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFuentesActionPerformed
    Graphics g = lienzo.getGraphics();

    
    // Obtiene la fuente seleccionada en la caja combinada
    fuenteSel = (String) cbFuentes.getSelectedItem();

    // Crea una fuente con la familia seleccionada
    fuente = new Font(fuenteSel, estiloSel, tamanosel);

    // Dibuja una cadena con la fuente seleccionada
    lienzo.setFuente(fuente);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_cbFuentesActionPerformed

  /**
   * Metodo oyente de la caja combinada para seleccionar el estilo de fuente a
   * usar en la fuente
   *
   * @param evt Evento al que escucha
   */
  private void cbEstilosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEstilosActionPerformed
    Graphics g = lienzo.getGraphics();

    // Obtiene el estilo de la fuente de la caja combinada
    estiloSel = cbEstilos.getSelectedIndex();

    // Crea una fuente con la familia seleccionada
    fuente = new Font(fuenteSel, estiloSel, tamanosel);

    // Dibuja una cadena con la fuente seleccionada
    lienzo.setFuente(fuente);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_cbEstilosActionPerformed

  /**
   * Metodo oyente del spinner para seleccionar el tamano de fuente a usar en la
   * fuente
   *
   * @param evt Evento al que escucha
   */
  private void spTamanosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spTamanosStateChanged
    Graphics g = lienzo.getGraphics();

    lienzo.borra(g);
    // Obtiene el tamano de la fuente del spinner
    String tamano = spTamanos.getModel().getValue().toString();
    tamanosel = Integer.parseInt(tamano);

    // Crea una fuente con la familia seleccionada
    fuente = new Font(fuenteSel, estiloSel, tamanosel);

    // Dibuja una cadena con la fuente seleccionada
    lienzo.setFuente(fuente);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_spTamanosStateChanged

  /**
   * Método oyente del botón botonAceptar
   *
   * @param evt Evento al que escucha
   */
  private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
    // Destruye el cuadro de díalogo
    dispose();
  }//GEN-LAST:event_btnAceptarActionPerformed

  /**
   * Metodo oyente que se invoca al desplegarse el cuadro de dialogo
   *
   * @param evt Evento al que escucha
   */
  private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    Graphics g = lienzo.getGraphics();

    // Dibuja una cadena con la fuente seleccionada
    lienzo.paintComponent(g);
  }//GEN-LAST:event_formWindowOpened

  /**
   * Metodo oyente que se invoca al cerrarse el menu del combobox con las fuentes
   * @param evt Evento al que escucha
   */
  private void cbFuentesPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbFuentesPopupMenuWillBecomeInvisible
    lienzo.repaint();
  }//GEN-LAST:event_cbFuentesPopupMenuWillBecomeInvisible

  /**
   * Metodo oyente que se invoca al cerrarse el menu del combobox con
   * los estilos de las fuentes
   * @param evt Evento al que escucha
   */
  private void cbEstilosPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbEstilosPopupMenuWillBecomeInvisible
    lienzo.repaint();
  }//GEN-LAST:event_cbEstilosPopupMenuWillBecomeInvisible

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JComboBox cbEstilos;
    private javax.swing.JComboBox cbFuentes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSpinner spTamanos;
    // End of variables declaration//GEN-END:variables
  private String fuenteSel;
  private int estiloSel;
  private int tamanosel;
  private Font fuente;
  private DefaultComboBoxModel listaNombresFamiliaFuentes;
  LienzoFuentes lienzo;
}
