/*
 * Lienzo.java
 */
package graficas;

import figuras.*;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.image.BufferedImage;

/**
 * Esta clase hereda de JPanel e implementa un lienzo en el que se dibujan
 * graficas
 *
 * @author Manuel Domitsu
 */
public class Lienzo extends javax.swing.JPanel {

  /**
   * Crea un lienzo y lo inicializa
   */
  public Lienzo() {
    initComponents();
  }

   /**
   * Estable el tipo de grafica a dibujar
   *
   * @param grafica Grafica a dibujar
   */
  public void setGrafica(Graficas grafica) {
    this.grafica = grafica;
  }
  
  /**
   * Establece la imagen a usarse como relleno
   * @param image Imagen a usarse como relleno
   */
  public void setImage(BufferedImage image) {
    this.image = image;
  }

 /**
   * Metódo que dibuja sobre el panel
   *
   * @param g Objeto con el contexto de graficación
   */
  @Override
  public void paintComponent(Graphics g) {
    // Obtiene el tamaño del panel
    Dimension d = getSize();
    Lineas lineas = new Lineas();
    Rectangulos rectangulos = new Rectangulos();
    Trayectorias trayectorias = new Trayectorias();
    Operaciones operaciones = new Operaciones();
    Texto texto = new Texto();

    switch (grafica) {
      case NULA:
        break;
      case LINEA:
        lineas.dibujaLineas(g, d);
        break;
      case CUADRATICA:
        lineas.dibujaCurvasCuadraticas(g, d);
        break;
      case CUBICA:
        lineas.dibujaCurvasCubicas(g, d);
        break;
      case RECTANGULO:
        rectangulos.dibujaRectangulos(g, d);
        break;
      case RECTANGULO_REDONDEADO:
        rectangulos.dibujaRectangulosRedondeados(g, d);
        break;
      case ELIPSE:
        rectangulos.dibujaElipses(g, d);
        break;
      case ARCO:
        rectangulos.dibujaArcos(g, d);
        break;
      case TRAYECTORIA:
        trayectorias.dibujaTrayectoria(g, d);
        break;
      case COMBINA:
        operaciones.combinaFiguras(g, d);
        break;
      case RELLENA:
        operaciones.rellenaFiguras(g, d, image);
        break;
      case CONTORNO:
        operaciones.contornoFiguras(g, d, image);
        break;
      case TRANSLADA:
        operaciones.transladaFiguras(g, d);
        break;
      case ROTA:
        operaciones.rotaFiguras(g, d);
        break;
      case ESCALA:
        operaciones.escalaFiguras(g, d);
        break;
      case DEFORMA:
        operaciones.deformaFiguras(g, d);
        break;
      case RECORTA:
        operaciones.recortaFiguras(g, d, image);
        break;
      case DIBUJA_TEXTO:
        texto.dibujaTexto(g, d);
        break;
      case ROTA_TEXTO:
        texto.rotaTexto(g, d);
        break;
    }
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

  public static enum Graficas {
    NULA, LINEA, CUADRATICA, CUBICA, RECTANGULO,
    RECTANGULO_REDONDEADO, ELIPSE, ARCO, TRAYECTORIA,
    COMBINA, RELLENA, CONTORNO, TRANSLADA, ROTA,
    ESCALA, DEFORMA, RECORTA, DIBUJA_TEXTO, ROTA_TEXTO
  };
  private Graficas grafica = Graficas.NULA;
  private BufferedImage image;
}
