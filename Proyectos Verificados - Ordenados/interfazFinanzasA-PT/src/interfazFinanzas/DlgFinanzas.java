/*
 * DlgFinanzas.java
 * Creada el 2 de diciembre del 2021 21:11 PM
 */
package interfazFinanzas;

import control.Control;
import control.Tabla;
import excepciones.FinanzaException;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import objetoNegocio.Egresos;
import objetoNegocio.Ingresos;

/**
 * Cuadro de dialog principal donde se obsrvan los ingresos actuales, egresos,
 * etc.
 *
 * @author Pacheco, Orozco y Cervantes
 */
public class DlgFinanzas extends javax.swing.JDialog {
    Click so = new Click("/recursos/click1.wav");

    ImageIcon a = new ImageIcon(getClass().getResource("/recursos/aceptar-el-contorno-del-boton-circular.png"));
    ImageIcon b = new ImageIcon(getClass().getResource("/recursos/rehacer-simbolo-de-flecha.png"));
    ImageIcon c = new ImageIcon(getClass().getResource("/recursos/error.png"));
    ImageIcon d = new ImageIcon(getClass().getResource("/recursos/save.png"));
    ImageIcon e = new ImageIcon(getClass().getResource("/recursos/eliminar.png"));
    ImageIcon[] ar = {a, b, c, d, e};
    private DefaultTableModel modelo;
    private javax.swing.JTable jtabla;
    private Control control = new Control();

    /**
     * Creates new form DlgFinanzas
     */
    public DlgFinanzas(java.awt.Frame parent, String title, boolean modal) {
        super(parent, title, modal);
        initComponents();
        botonEliminar1.setIcon(ar[4]);
        botonActualizar.setIcon(ar[1]);
        setSize(700, 587);
        setLocationRelativeTo(null);
        setVisible(true);

    }

    /**
     * Este método crea un objeto del tipo JTable dentro de un panel con barras
     * de deslizamiento y la despliega
     *
     * @param tabla objeto TableModel con los datos de una tabla
     */
    public void despliegaTabla(Tabla tabla) {
        modelo = tabla.getModeloTabla();

        // Crea la tabla a partir del modelo de la tabla con los valores 
        // de los titulos de las columnas y los valores de las celdas 
        jtabla = new javax.swing.JTable(tabla.getModeloTabla());
        //NO mover
        jtabla.getTableHeader().setReorderingAllowed(false);
        //No editar
        jtabla.setDefaultEditor(Object.class, null);

// Establece el título de la tabla 
        tituloTabla.setText(tabla.getTitulo());
        // Hace que el control del tamaño de la tabla y la porción visible 
        // lo tenga la barra de deslizamiento y no la tabla 
        jtabla.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtabla.setAutoscrolls(false);
        // Hace visible la tabla dentro del panel con barras de 
        // deslizamiento 
        panelTablas.setViewportView(jtabla);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelTablas = new javax.swing.JScrollPane();
        tituloTabla = new javax.swing.JLabel();
        botonActualizar = new javax.swing.JButton();
        botonEliminar1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuCatalogos = new javax.swing.JMenu();
        menuCatalogoEgresos = new javax.swing.JMenu();
        opcionMenuAgregarEgreso = new javax.swing.JMenuItem();
        menuCatalogoIngresos = new javax.swing.JMenu();
        opcionMenuAgregarIngreso = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        opcionMenuRegresar = new javax.swing.JMenuItem();
        menuConsultas = new javax.swing.JMenu();
        menuConsultaEgresos = new javax.swing.JMenu();
        opcionMenuEgresosListas = new javax.swing.JMenuItem();
        opcionMenuFechaEgresosListas = new javax.swing.JMenuItem();
        opcionMenuPeriodoEgresosListas = new javax.swing.JMenuItem();
        opcionMenuCategoriaEgresosListas = new javax.swing.JMenuItem();
        menuConsultaIngresos = new javax.swing.JMenu();
        opcionMenuIngresosListas = new javax.swing.JMenuItem();
        opcionMenuFechaIngresosListas = new javax.swing.JMenuItem();
        opcionMenuPeriodoIngresosListas = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setLayout(null);

        panelTablas.setBorder(null);
        panelTablas.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelTablas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(panelTablas);
        panelTablas.setBounds(30, 130, 620, 280);

        tituloTabla.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        tituloTabla.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(tituloTabla);
        tituloTabla.setBounds(30, 40, 620, 50);

        botonActualizar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        botonActualizar.setText("Actualizar");
        botonActualizar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        botonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(botonActualizar);
        botonActualizar.setBounds(450, 430, 140, 40);

        botonEliminar1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        botonEliminar1.setText("Eliminar");
        botonEliminar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        botonEliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminar1ActionPerformed(evt);
            }
        });
        jPanel1.add(botonEliminar1);
        botonEliminar1.setBounds(100, 430, 140, 40);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 690, 510);

        jMenuBar1.setBackground(new java.awt.Color(102, 102, 0));
        jMenuBar1.setForeground(new java.awt.Color(153, 153, 0));

        menuCatalogos.setText("Catalogos");
        menuCatalogos.setFont(new java.awt.Font("Segoe UI", 2, 24)); // NOI18N

        menuCatalogoEgresos.setText("Egresos");
        menuCatalogoEgresos.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N

        opcionMenuAgregarEgreso.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        opcionMenuAgregarEgreso.setText("Agregar");
        opcionMenuAgregarEgreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuAgregarEgresoActionPerformed(evt);
            }
        });
        menuCatalogoEgresos.add(opcionMenuAgregarEgreso);

        menuCatalogos.add(menuCatalogoEgresos);

        menuCatalogoIngresos.setText("Ingresos");
        menuCatalogoIngresos.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N

        opcionMenuAgregarIngreso.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        opcionMenuAgregarIngreso.setText("Agregar");
        opcionMenuAgregarIngreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuAgregarIngresoActionPerformed(evt);
            }
        });
        menuCatalogoIngresos.add(opcionMenuAgregarIngreso);

        menuCatalogos.add(menuCatalogoIngresos);
        menuCatalogos.add(jSeparator1);

        opcionMenuRegresar.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        opcionMenuRegresar.setText("Regresar");
        opcionMenuRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuRegresarActionPerformed(evt);
            }
        });
        menuCatalogos.add(opcionMenuRegresar);

        jMenuBar1.add(menuCatalogos);

        menuConsultas.setText("Consultas");
        menuConsultas.setFont(new java.awt.Font("Segoe UI", 2, 24)); // NOI18N

        menuConsultaEgresos.setText("Egresos");
        menuConsultaEgresos.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N

        opcionMenuEgresosListas.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        opcionMenuEgresosListas.setText("Egresos");
        opcionMenuEgresosListas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuEgresosListasActionPerformed(evt);
            }
        });
        menuConsultaEgresos.add(opcionMenuEgresosListas);

        opcionMenuFechaEgresosListas.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        opcionMenuFechaEgresosListas.setText("Fecha");
        opcionMenuFechaEgresosListas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuFechaEgresosListasActionPerformed(evt);
            }
        });
        menuConsultaEgresos.add(opcionMenuFechaEgresosListas);

        opcionMenuPeriodoEgresosListas.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        opcionMenuPeriodoEgresosListas.setText("Periodo");
        opcionMenuPeriodoEgresosListas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuPeriodoEgresosListasActionPerformed(evt);
            }
        });
        menuConsultaEgresos.add(opcionMenuPeriodoEgresosListas);

        opcionMenuCategoriaEgresosListas.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        opcionMenuCategoriaEgresosListas.setText("Categoria");
        opcionMenuCategoriaEgresosListas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuCategoriaEgresosListasActionPerformed(evt);
            }
        });
        menuConsultaEgresos.add(opcionMenuCategoriaEgresosListas);

        menuConsultas.add(menuConsultaEgresos);

        menuConsultaIngresos.setText("Ingresos");
        menuConsultaIngresos.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N

        opcionMenuIngresosListas.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        opcionMenuIngresosListas.setText("Ingresos");
        opcionMenuIngresosListas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuIngresosListasActionPerformed(evt);
            }
        });
        menuConsultaIngresos.add(opcionMenuIngresosListas);

        opcionMenuFechaIngresosListas.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        opcionMenuFechaIngresosListas.setText("Fecha");
        opcionMenuFechaIngresosListas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuFechaIngresosListasActionPerformed(evt);
            }
        });
        menuConsultaIngresos.add(opcionMenuFechaIngresosListas);

        opcionMenuPeriodoIngresosListas.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        opcionMenuPeriodoIngresosListas.setText("Periodo");
        opcionMenuPeriodoIngresosListas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuPeriodoIngresosListasActionPerformed(evt);
            }
        });
        menuConsultaIngresos.add(opcionMenuPeriodoIngresosListas);

        menuConsultas.add(menuConsultaIngresos);

        jMenuBar1.add(menuConsultas);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     * Evento de la opcion de menu agregar que permite agregar un ingreso.
     *
     * @param evt Evento
     */
    private void opcionMenuAgregarIngresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuAgregarIngresoActionPerformed
        // TODO add your handling code here:
        try {
            control.agregarIngreso(new JFrame());
        } catch (FinanzaException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        Tabla tablaIngresos = control.getTablaIngresos();
        if (tablaIngresos != null) {
            despliegaTabla(tablaIngresos);
        }
    }//GEN-LAST:event_opcionMenuAgregarIngresoActionPerformed
    /**
     * Evento de la opcion de menu agregar que permite agregar un egreso.
     *
     * @param evt Evento
     */
    private void opcionMenuAgregarEgresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuAgregarEgresoActionPerformed
        try {
            control.agregarEgreso(new JFrame());
        } catch (FinanzaException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        Tabla tablaEgresos = control.getTablaEgresos();
        if (tablaEgresos != null) {
            despliegaTabla(tablaEgresos);
        }
    }//GEN-LAST:event_opcionMenuAgregarEgresoActionPerformed
    /**
     * Evento de la opcion de menu agregar que permite actualizar un ingreso o
     * egreso dependiendo de la columna selecionada.
     *
     * @param evt Evento
     */
    private void botonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActualizarActionPerformed
            so.run();
        Thread hilo = Thread.currentThread();
        try {
            hilo.sleep(100);
        } catch (InterruptedException e) {
        }
        if (jtabla != null) {
            int elim = jtabla.getSelectedRow();
            if (elim >= 0) {
                String id = ((String) jtabla.getValueAt(elim, 0));
                String tipo = ((String) jtabla.getValueAt(elim, 1));
                if (tipo.equalsIgnoreCase("Ingresos")) {
                    try {
                        control.actualizarIngreso(new Ingresos(id), new JFrame());
                        Tabla tablaIngresos = control.getTablaIngresos();
                        if (tablaIngresos != null) {
                            despliegaTabla(tablaIngresos);
                        }
                    } catch (FinanzaException e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }
                } else if (tipo.equalsIgnoreCase("Egresos")) {
                    try {
                        control.actualizarEgreso(new Egresos(id), new JFrame());
                        Tabla tablaEgresos = control.getTablaEgresos();
                        if (tablaEgresos != null) {
                            despliegaTabla(tablaEgresos);
                        }
                    } catch (FinanzaException e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Selecionar fila, porfavor.");
            }
        }
    }//GEN-LAST:event_botonActualizarActionPerformed
    /**
     * Evento de la opcion de menu agregar que permite eliminar un ingreso o
     * egreso dependiendo de la columna selecionada.
     *
     * @param evt Evento
     */
    private void botonEliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminar1ActionPerformed
            so.run();
        Thread hilo = Thread.currentThread();
        try {
            hilo.sleep(100);
        } catch (InterruptedException e) {
        }
        if (jtabla != null) {
            int elim = jtabla.getSelectedRow();
            if (elim >= 0) {
                String id = ((String) jtabla.getValueAt(elim, 0));
                String tipo = ((String) jtabla.getValueAt(elim, 1));
                if (tipo.equalsIgnoreCase("Ingresos")) {
                    try {
                        control.eliminarIngreso(new Ingresos(id));
                        Tabla tablaIngresos = control.getTablaIngresos();
                        if (tablaIngresos != null) {
                            despliegaTabla(tablaIngresos);
                        }
                    } catch (FinanzaException es) {
                    }
                } else if (tipo.equalsIgnoreCase("Egresos")) {
                    try {
                        control.eliminarEgreso(new Egresos(id));
                        Tabla tablaEgresos = control.getTablaEgresos();
                        if (tablaEgresos != null) {
                            despliegaTabla(tablaEgresos);
                        }
                    } catch (FinanzaException s) {
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Selecionar fila, porfavor.");
            }
        }

    }//GEN-LAST:event_botonEliminar1ActionPerformed
    /**
     * Evento de la opcion de menu categoria egresos que permite obtenr los
     * egresos por categoria.
     *
     * @param evt Evento
     */
    private void opcionMenuCategoriaEgresosListasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuCategoriaEgresosListasActionPerformed
        // TODO add your handling code here:
        Tabla tablaEgresosCategoria = control.getTablaEgresosCategoria(new JFrame());
        if (tablaEgresosCategoria != null) {
            despliegaTabla(tablaEgresosCategoria);
        }
    }//GEN-LAST:event_opcionMenuCategoriaEgresosListasActionPerformed
    /**
     * Evento de la opcion de menu egresos que permite obtener la lista de
     * egresos.
     *
     * @param evt Evento
     */
    private void opcionMenuEgresosListasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuEgresosListasActionPerformed
        Tabla tablaEgresos = control.getTablaEgresos();
        if (tablaEgresos != null) {
            despliegaTabla(tablaEgresos);
        }
    }//GEN-LAST:event_opcionMenuEgresosListasActionPerformed
    /**
     * Evento de la opcion de menu egresos que permite obtener la lista de
     * ingresos.
     *
     * @param evt Evento
     */
    private void opcionMenuIngresosListasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuIngresosListasActionPerformed
        // TODO add your handling code here:
        Tabla tablaIngresos = control.getTablaIngresos();
        if (tablaIngresos != null) {
            despliegaTabla(tablaIngresos);
        }

    }//GEN-LAST:event_opcionMenuIngresosListasActionPerformed
    /**
     * Metodo de la opcion menu regresar, que activa un temporizador, que cierra
     * en 5 segundos el cuadro de dialogo.
     *
     * @param evt Evento
     */
    private void opcionMenuRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuRegresarActionPerformed
        Thread hilo = Thread.currentThread();
        try {
            setTitle("La ventana se cerrara en 5 segundos");
            hilo.sleep(1000);
            setTitle("La ventana se cerrara en 4 segundos");
            hilo.sleep(1000);
            setTitle("La ventana se cerrara en 3 segundos");
            hilo.sleep(1000);
            setTitle("La ventana se cerrara en 2 segundos");
            hilo.sleep(1000);
            setTitle("La ventana se cerrara en 1 segundos");
            hilo.sleep(1000);
        } catch (InterruptedException e) {
        }
        dispose();
    }//GEN-LAST:event_opcionMenuRegresarActionPerformed
    /**
     * Evento de la opcion de menu egresos que permite obtener la lista de
     * egresos por fecha.
     *
     * @param evt Evento
     */
    private void opcionMenuFechaEgresosListasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuFechaEgresosListasActionPerformed
        // TODO add your handling code here:
        Tabla egresosFecha = control.getTablaEgresosFecha(new JFrame());
        if (egresosFecha != null) {
            despliegaTabla(egresosFecha);
        }
    }//GEN-LAST:event_opcionMenuFechaEgresosListasActionPerformed
    /**
     * Evento de la opcion de menu egresos que permite obtener la lista de
     * egresos por periodo.
     *
     * @param evt Evento
     */
    private void opcionMenuPeriodoEgresosListasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuPeriodoEgresosListasActionPerformed
        // TODO add your handling code here:
        Tabla egresosPeriodo = control.getTablaEgresosPeriodo(new JFrame());
        if (egresosPeriodo != null) {
            despliegaTabla(egresosPeriodo);
        }
    }//GEN-LAST:event_opcionMenuPeriodoEgresosListasActionPerformed
    /**
     * Evento de la opcion de menu egresos que permite obtener la lista de
     * ingresos por fecha.
     *
     * @param evt Evento
     */
    private void opcionMenuFechaIngresosListasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuFechaIngresosListasActionPerformed
        // TODO add your handling code here:
        Tabla ingresosFecha = control.getTablaIngresosFecha(new JFrame());
        if (ingresosFecha != null) {
            despliegaTabla(ingresosFecha);
        }
    }//GEN-LAST:event_opcionMenuFechaIngresosListasActionPerformed
    /**
     * Evento de la opcion de menu egresos que permite obtener la lista de
     * ingresos por periodo.
     *
     * @param evt Evento
     */
    private void opcionMenuPeriodoIngresosListasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuPeriodoIngresosListasActionPerformed
        // TODO add your handling code here:
        Tabla ingresosPeriodo = control.getTablaIngresosPeriodo(new JFrame());
        if (ingresosPeriodo != null) {
            despliegaTabla(ingresosPeriodo);
        }
    }//GEN-LAST:event_opcionMenuPeriodoIngresosListasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonActualizar;
    private javax.swing.JButton botonEliminar1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu menuCatalogoEgresos;
    private javax.swing.JMenu menuCatalogoIngresos;
    private javax.swing.JMenu menuCatalogos;
    private javax.swing.JMenu menuConsultaEgresos;
    private javax.swing.JMenu menuConsultaIngresos;
    private javax.swing.JMenu menuConsultas;
    private javax.swing.JMenuItem opcionMenuAgregarEgreso;
    private javax.swing.JMenuItem opcionMenuAgregarIngreso;
    private javax.swing.JMenuItem opcionMenuCategoriaEgresosListas;
    private javax.swing.JMenuItem opcionMenuEgresosListas;
    private javax.swing.JMenuItem opcionMenuFechaEgresosListas;
    private javax.swing.JMenuItem opcionMenuFechaIngresosListas;
    private javax.swing.JMenuItem opcionMenuIngresosListas;
    private javax.swing.JMenuItem opcionMenuPeriodoEgresosListas;
    private javax.swing.JMenuItem opcionMenuPeriodoIngresosListas;
    private javax.swing.JMenuItem opcionMenuRegresar;
    private javax.swing.JScrollPane panelTablas;
    private javax.swing.JLabel tituloTabla;
    // End of variables declaration//GEN-END:variables
}
