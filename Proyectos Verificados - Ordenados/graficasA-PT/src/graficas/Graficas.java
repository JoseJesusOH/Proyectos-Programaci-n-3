/*
 * Graficas.java
 */
package graficas;

import figuras.Texto;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/**
 * Esta es la ventana principal de la aplicación Graficas
 *
 * @author Manuel Domitsu
 */
public class Graficas extends javax.swing.JFrame {

  /**
   * Crea la ventana principal de la aplicación, la centra y le agrega un panel
   * sobre el que se dibujarán las graficas
   */
  public Graficas() {
    initComponents();

    centraVentana();

    lienzo = new Lienzo();
    lienzo.setLocation(0, 0);
    lienzo.setSize(600, 400);
    lienzo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    add(lienzo);
    g = lienzo.getGraphics();
  }

  /**
   * Este método centra la ventana de la aplicación sobre la pantalla
   */
  private void centraVentana() {
    //Obtiene el tamaño de la pantalla
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

    // Obtiene el tamaño de la ventana de la aplicación
    Dimension frameSize = getSize();

    // Se asegura que el tamaño de la ventana de la aplicación
    // no exceda el tamaño de la pantalla
    if (frameSize.height > screenSize.height) {
      frameSize.height = screenSize.height;
    }
    if (frameSize.width > screenSize.width) {
      frameSize.width = screenSize.width;
    }

    // Centra la ventana de la aplicación sobre la pantalla
    setLocation((screenSize.width - frameSize.width) / 2,
            (screenSize.height - frameSize.height) / 2);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar = new javax.swing.JMenuBar();
        menuFiguras = new javax.swing.JMenu();
        opcionLineas = new javax.swing.JMenuItem();
        opcionCurvasCuadraticas = new javax.swing.JMenuItem();
        opcionCurvasCubicas = new javax.swing.JMenuItem();
        opcionRectangulos = new javax.swing.JMenuItem();
        opcionRectangulosRedondeados = new javax.swing.JMenuItem();
        opcionElipses = new javax.swing.JMenuItem();
        opcionArcos = new javax.swing.JMenuItem();
        opcionTrayectorias = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        opcionSalir = new javax.swing.JMenuItem();
        menuOperaciones = new javax.swing.JMenu();
        opcionCombinar = new javax.swing.JMenuItem();
        opcionRellenar = new javax.swing.JMenuItem();
        opcionContorno = new javax.swing.JMenuItem();
        opcionTransladar = new javax.swing.JMenuItem();
        opcionRotar = new javax.swing.JMenuItem();
        opcionEscalar = new javax.swing.JMenuItem();
        opcionDeformar = new javax.swing.JMenuItem();
        opcionRecortar = new javax.swing.JMenuItem();
        menuTexto = new javax.swing.JMenu();
        opcionDibujarTexto = new javax.swing.JMenuItem();
        opcionRotarTexto = new javax.swing.JMenuItem();
        opcionFuentes = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Demo de Gráficas");

        menuFiguras.setMnemonic('f');
        menuFiguras.setText("Figuras");
        menuFiguras.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
                menuFigurasMenuDeselected(evt);
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
            }
        });

        opcionLineas.setMnemonic('o');
        opcionLineas.setText("Líneas");
        opcionLineas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionLineasActionPerformed(evt);
            }
        });
        menuFiguras.add(opcionLineas);

        opcionCurvasCuadraticas.setMnemonic('s');
        opcionCurvasCuadraticas.setText("Curvas cuadráticas");
        opcionCurvasCuadraticas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionCurvasCuadraticasActionPerformed(evt);
            }
        });
        menuFiguras.add(opcionCurvasCuadraticas);

        opcionCurvasCubicas.setMnemonic('a');
        opcionCurvasCubicas.setText("Curvas cúbicas");
        opcionCurvasCubicas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionCurvasCubicasActionPerformed(evt);
            }
        });
        menuFiguras.add(opcionCurvasCubicas);

        opcionRectangulos.setText("Rectángulos");
        opcionRectangulos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionRectangulosActionPerformed(evt);
            }
        });
        menuFiguras.add(opcionRectangulos);

        opcionRectangulosRedondeados.setText("Rectángulos redondeados");
        opcionRectangulosRedondeados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionRectangulosRedondeadosActionPerformed(evt);
            }
        });
        menuFiguras.add(opcionRectangulosRedondeados);

        opcionElipses.setText("Elipses");
        opcionElipses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionElipsesActionPerformed(evt);
            }
        });
        menuFiguras.add(opcionElipses);

        opcionArcos.setText("Arcos");
        opcionArcos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionArcosActionPerformed(evt);
            }
        });
        menuFiguras.add(opcionArcos);

        opcionTrayectorias.setText("Trayectorias");
        opcionTrayectorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionTrayectoriasActionPerformed(evt);
            }
        });
        menuFiguras.add(opcionTrayectorias);
        menuFiguras.add(jSeparator1);

        opcionSalir.setMnemonic('x');
        opcionSalir.setText("Salir");
        opcionSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionSalirActionPerformed(evt);
            }
        });
        menuFiguras.add(opcionSalir);

        menuBar.add(menuFiguras);

        menuOperaciones.setMnemonic('e');
        menuOperaciones.setText("Operaciones");
        menuOperaciones.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
                menuOperacionesMenuDeselected(evt);
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
            }
        });

        opcionCombinar.setMnemonic('t');
        opcionCombinar.setText("Combinar areas");
        opcionCombinar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionCombinarActionPerformed(evt);
            }
        });
        menuOperaciones.add(opcionCombinar);

        opcionRellenar.setMnemonic('y');
        opcionRellenar.setText("Rellenar figuras");
        opcionRellenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionRellenarActionPerformed(evt);
            }
        });
        menuOperaciones.add(opcionRellenar);

        opcionContorno.setMnemonic('p');
        opcionContorno.setText("Dibujar Contorno");
        opcionContorno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionContornoActionPerformed(evt);
            }
        });
        menuOperaciones.add(opcionContorno);

        opcionTransladar.setMnemonic('d');
        opcionTransladar.setText("Transladar");
        opcionTransladar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionTransladarActionPerformed(evt);
            }
        });
        menuOperaciones.add(opcionTransladar);

        opcionRotar.setText("Rotar");
        opcionRotar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionRotarActionPerformed(evt);
            }
        });
        menuOperaciones.add(opcionRotar);

        opcionEscalar.setText("Escalar");
        opcionEscalar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionEscalarActionPerformed(evt);
            }
        });
        menuOperaciones.add(opcionEscalar);

        opcionDeformar.setText("Deformar");
        opcionDeformar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionDeformarActionPerformed(evt);
            }
        });
        menuOperaciones.add(opcionDeformar);

        opcionRecortar.setText("Recortar");
        opcionRecortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionRecortarActionPerformed(evt);
            }
        });
        menuOperaciones.add(opcionRecortar);

        menuBar.add(menuOperaciones);

        menuTexto.setMnemonic('t');
        menuTexto.setText("Texto");
        menuTexto.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
                menuTextoMenuDeselected(evt);
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
            }
        });

        opcionDibujarTexto.setText("Dibuja Texto");
        opcionDibujarTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionDibujarTextoActionPerformed(evt);
            }
        });
        menuTexto.add(opcionDibujarTexto);

        opcionRotarTexto.setText("Rota Texto");
        opcionRotarTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionRotarTextoActionPerformed(evt);
            }
        });
        menuTexto.add(opcionRotarTexto);

        opcionFuentes.setText("Fuentes");
        opcionFuentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionFuentesActionPerformed(evt);
            }
        });
        menuTexto.add(opcionFuentes);

        menuBar.add(menuTexto);

        menuAyuda.setMnemonic('h');
        menuAyuda.setText("Ayuda");
        menuAyuda.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
                menuAyudaMenuDeselected(evt);
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
            }
        });

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        menuAyuda.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        menuAyuda.add(aboutMenuItem);

        menuBar.add(menuAyuda);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 379, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void opcionSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionSalirActionPerformed
      System.exit(0);
    }//GEN-LAST:event_opcionSalirActionPerformed

  /**
   * Metodo oyente de la opcion de menu Figuras. Dibuja varias lineas en el
   * panel Lienzo
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionLineasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionLineasActionPerformed
    lienzo.setGrafica(Lienzo.Graficas.LINEA);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_opcionLineasActionPerformed

  /**
   * Metodo oyente de la opcion de menu Figuras. Dibuja varias curvas
   * cuadraticas en el panel Lienzo
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionCurvasCuadraticasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionCurvasCuadraticasActionPerformed
    lienzo.setGrafica(Lienzo.Graficas.CUADRATICA);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_opcionCurvasCuadraticasActionPerformed

  /**
   * Metodo oyente de la opcion de menu Figuras. Dibuja varias curvas cubicas en
   * el panel Lienzo
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionCurvasCubicasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionCurvasCubicasActionPerformed
    lienzo.setGrafica(Lienzo.Graficas.CUBICA);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_opcionCurvasCubicasActionPerformed

  /**
   * Metodo oyente de la opcion de menu Figuras. Dibuja varios rectangulos en el
   * panel Lienzo
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionRectangulosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionRectangulosActionPerformed
    lienzo.setGrafica(Lienzo.Graficas.RECTANGULO);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_opcionRectangulosActionPerformed

  /**
   * Metodo oyente de la opcion de menu Figuras. Dibuja varios rectangulos
   * redondeados en el panel Lienzo
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionRectangulosRedondeadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionRectangulosRedondeadosActionPerformed
    lienzo.setGrafica(Lienzo.Graficas.RECTANGULO_REDONDEADO);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_opcionRectangulosRedondeadosActionPerformed

  /**
   * Metodo oyente de la opcion de menu Figuras. Dibuja varias elipses
   * redondeados en el panel Lienzo
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionElipsesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionElipsesActionPerformed
    lienzo.setGrafica(Lienzo.Graficas.ELIPSE);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_opcionElipsesActionPerformed

  /**
   * Metodo oyente de la opcion de menu Figuras. Dibuja varios arcos en el panel
   * Lienzo
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionArcosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionArcosActionPerformed
    lienzo.setGrafica(Lienzo.Graficas.ARCO);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_opcionArcosActionPerformed

  /**
   * Metodo oyente de la opcion de menu Figuras. Dibuja una trayectoria
   * arbitraria en el panel Lienzo
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionTrayectoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionTrayectoriasActionPerformed
    lienzo.setGrafica(Lienzo.Graficas.TRAYECTORIA);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_opcionTrayectoriasActionPerformed

  /**
   * Metodo oyente de la opcion de menu Graficas. Dibuja diferentes
   * combinaciones de areas en el panel Lienzo
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionCombinarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionCombinarActionPerformed
    lienzo.setGrafica(Lienzo.Graficas.COMBINA);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_opcionCombinarActionPerformed

  /**
   * Metodo oyente de la opcion de menu Graficas. Dibuja diferentes figuras con
   * relleno en el panel Lienzo
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionRellenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionRellenarActionPerformed
    BufferedImage image = null;
    try {
      File file = new File("fondo.jpg");
      image = ImageIO.read(file);
    } catch (IOException ioe) {
      JOptionPane.showMessageDialog(this, "Error al cargar imagen");
      return;
    }
    lienzo.setGrafica(Lienzo.Graficas.RELLENA);
    lienzo.setImage(image);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_opcionRellenarActionPerformed

  /**
   * Metodo oyente de la opcion de menu Graficas. Dibuja diferentes tipos de
   * contorno en el panel Lienzo
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionContornoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionContornoActionPerformed
    BufferedImage image = null;
    try {
      File file = new File("fondo.jpg");
      image = ImageIO.read(file);
    } catch (IOException ioe) {
      JOptionPane.showMessageDialog(this, "Error al cargar imagen");
      return;
    }
   lienzo.setGrafica(Lienzo.Graficas.CONTORNO);
    lienzo.setImage(image);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_opcionContornoActionPerformed

  /**
   * Metodo oyente de la opcion de menu Graficas. Dibuja diferentes
   * translaciones en el panel Lienzo
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionTransladarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionTransladarActionPerformed
    lienzo.setGrafica(Lienzo.Graficas.TRANSLADA);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_opcionTransladarActionPerformed

  /**
   * Metodo oyente de la opcion de menu Graficas. Dibuja diferentes rotaciones
   * en el panel Lienzo
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionRotarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionRotarActionPerformed
    lienzo.setGrafica(Lienzo.Graficas.ROTA);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_opcionRotarActionPerformed

  /**
   * Metodo oyente de la opcion de menu Graficas. Dibuja diferentes
   * escalamientos en el panel Lienzo
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionEscalarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionEscalarActionPerformed
    lienzo.setGrafica(Lienzo.Graficas.ESCALA);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_opcionEscalarActionPerformed

  /**
   * Metodo oyente de la opcion de menu Graficas. Dibuja diferentes
   * deformaciones en el panel Lienzo
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionDeformarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionDeformarActionPerformed
    lienzo.setGrafica(Lienzo.Graficas.DEFORMA);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_opcionDeformarActionPerformed

  /**
   * Metodo oyente de la opcion de menu Graficas. Dibuja diferentes figuras
   * recortadas en el panel Lienzo
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionRecortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionRecortarActionPerformed
    BufferedImage image = null;
    try {
      File file = new File("fondo.jpg");
      image = ImageIO.read(file);
    } catch (IOException ioe) {
      JOptionPane.showMessageDialog(this, "Error al cargar imagen");
      return;
    }
    lienzo.setGrafica(Lienzo.Graficas.RECORTA);
    lienzo.setImage(image);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_opcionRecortarActionPerformed

  /**
   * Metodo oyente de la opcion de menu Graficas. Dibuja texto en el panel
   * Lienzo
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionDibujarTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionDibujarTextoActionPerformed
    lienzo.setGrafica(Lienzo.Graficas.DIBUJA_TEXTO);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_opcionDibujarTextoActionPerformed

  /**
   * Metodo oyente de la opcion de menu Graficas. Rota texto en el panel Lienzo
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionRotarTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionRotarTextoActionPerformed
    lienzo.setGrafica(Lienzo.Graficas.ROTA_TEXTO);
    lienzo.paintComponent(g);
  }//GEN-LAST:event_opcionRotarTextoActionPerformed

  /**
   * Metodo oyente de la opcion de menu Graficas. Permite seleccionar una fuente
   * de las fuentes disponibles en el sistema
   *
   * @param evt Evento de hacer clic sobre la opcion de menu
   */
  private void opcionFuentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionFuentesActionPerformed
    Texto texto = new Texto();

    texto.fuentes(this);
  }//GEN-LAST:event_opcionFuentesActionPerformed

  /**
   * Metodo oyente del evento de cerrarse el menu Figuras. Repinta el panel
   * @param evt Evento de cerrarse el menu Figuras
   */
  private void menuFigurasMenuDeselected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuFigurasMenuDeselected
    lienzo.repaint();
  }//GEN-LAST:event_menuFigurasMenuDeselected

  /**
   * Metodo oyente del evento de cerrarse el menu Operaciones. Repinta el panel
   * @param evt Evento de cerrarse el menu Figuras
   */
  private void menuOperacionesMenuDeselected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuOperacionesMenuDeselected
    lienzo.repaint();
  }//GEN-LAST:event_menuOperacionesMenuDeselected

  /**
   * Metodo oyente del evento de cerrarse el menu Texto. Repinta el panel
   * @param evt Evento de cerrarse el menu Figuras
   */
  private void menuTextoMenuDeselected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuTextoMenuDeselected
    lienzo.repaint();
  }//GEN-LAST:event_menuTextoMenuDeselected

  /**
   * Metodo oyente del evento de cerrarse el menu Ayuda. Repinta el panel
   * @param evt Evento de cerrarse el menu Figuras
   */
  private void menuAyudaMenuDeselected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuAyudaMenuDeselected
    lienzo.repaint();
  }//GEN-LAST:event_menuAyudaMenuDeselected

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /*
     * Set the Nimbus look and feel
     */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the
     * default look and feel. For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(Graficas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(Graficas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(Graficas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(Graficas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /*
     * Create and display the form
     */
    java.awt.EventQueue.invokeLater(new Runnable() {

      @Override
      public void run() {
        new Graficas().setVisible(true);
      }
    });
  }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuFiguras;
    private javax.swing.JMenu menuOperaciones;
    private javax.swing.JMenu menuTexto;
    private javax.swing.JMenuItem opcionArcos;
    private javax.swing.JMenuItem opcionCombinar;
    private javax.swing.JMenuItem opcionContorno;
    private javax.swing.JMenuItem opcionCurvasCuadraticas;
    private javax.swing.JMenuItem opcionCurvasCubicas;
    private javax.swing.JMenuItem opcionDeformar;
    private javax.swing.JMenuItem opcionDibujarTexto;
    private javax.swing.JMenuItem opcionElipses;
    private javax.swing.JMenuItem opcionEscalar;
    private javax.swing.JMenuItem opcionFuentes;
    private javax.swing.JMenuItem opcionLineas;
    private javax.swing.JMenuItem opcionRecortar;
    private javax.swing.JMenuItem opcionRectangulos;
    private javax.swing.JMenuItem opcionRectangulosRedondeados;
    private javax.swing.JMenuItem opcionRellenar;
    private javax.swing.JMenuItem opcionRotar;
    private javax.swing.JMenuItem opcionRotarTexto;
    private javax.swing.JMenuItem opcionSalir;
    private javax.swing.JMenuItem opcionTransladar;
    private javax.swing.JMenuItem opcionTrayectorias;
    // End of variables declaration//GEN-END:variables
  Lienzo lienzo;
  Graphics g;
}
