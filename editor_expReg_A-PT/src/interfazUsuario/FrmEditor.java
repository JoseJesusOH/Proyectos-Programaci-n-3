/*
 * FrmEditor.java
 * Creada el 20 de septiembre del 2021 a las 5:21 PM 
 */
package interfazUsuario;

import control.Control;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 * Frame de editor con el fin de comprobar el sistema de archivos. Alumno; José
 * Jesús Orozco Hernández Id; 00000229141
 *
 * @author José Jesús Orozco Hernández
 */
public class FrmEditor extends javax.swing.JFrame {

    /**
     * Objeto de la clase control
     */
    Control control = new Control();
    /**
     * Instanciade la clase File
     */
    File file;

    /**
     * Creates new form FrmEditor
     */
    @SuppressWarnings("empty-statement")
    public FrmEditor() {
        initComponents();
        centraVentana();
        setTitle("Editor de archivos");
        setVisible(true);
    }

    /**
     * Este método centra la ventana de la aplicación sobre la pantalla
     */
    private void centraVentana() {
        //Obtiene el tamaño de la pantalla 
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

        // Obtiene el tamaño de la ventana de la aplicación 
        Dimension frameSize = getSize();

        // Se asegura que el tamaño de la ventana de la aplicación 
        // no exceda el tamaño de la pantalla 
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }

        // Centra la ventana de la aplicación sobre la pantalla 
        setLocation((screenSize.width - frameSize.width) / 2,
                (screenSize.height - frameSize.height) / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        areaTexto = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        menuArchivos = new javax.swing.JMenu();
        opcionMenuNuevo = new javax.swing.JMenuItem();
        opcionMenuAbrir = new javax.swing.JMenuItem();
        opcionMenuGuardar = new javax.swing.JMenuItem();
        opcionMenuGuardarComo = new javax.swing.JMenuItem();
        opcionMenuEliminar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        opcionMenuSalir = new javax.swing.JMenuItem();
        menuEdición = new javax.swing.JMenu();
        opcionMenuReemplazar = new javax.swing.JMenuItem();
        opcionMenuContar = new javax.swing.JMenuItem();
        opcionMenuSobreMi = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Editor");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Archivo actual;");

        jDesktopPane2.setPreferredSize(new java.awt.Dimension(400, 200));

        areaTexto.setColumns(20);
        areaTexto.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        areaTexto.setRows(5);
        jScrollPane2.setViewportView(areaTexto);

        jDesktopPane2.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        menuArchivos.setMnemonic('f');
        menuArchivos.setText("Archivos");

        opcionMenuNuevo.setMnemonic('o');
        opcionMenuNuevo.setText("Nuevo");
        opcionMenuNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuNuevoActionPerformed(evt);
            }
        });
        menuArchivos.add(opcionMenuNuevo);

        opcionMenuAbrir.setMnemonic('o');
        opcionMenuAbrir.setText("Abrir");
        opcionMenuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuAbrirActionPerformed(evt);
            }
        });
        menuArchivos.add(opcionMenuAbrir);

        opcionMenuGuardar.setMnemonic('o');
        opcionMenuGuardar.setText("Guardar");
        opcionMenuGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuGuardarActionPerformed(evt);
            }
        });
        menuArchivos.add(opcionMenuGuardar);

        opcionMenuGuardarComo.setMnemonic('o');
        opcionMenuGuardarComo.setText("Guardar como");
        opcionMenuGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuGuardarComoActionPerformed(evt);
            }
        });
        menuArchivos.add(opcionMenuGuardarComo);

        opcionMenuEliminar.setMnemonic('o');
        opcionMenuEliminar.setText("Eliminar");
        opcionMenuEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuEliminarActionPerformed(evt);
            }
        });
        menuArchivos.add(opcionMenuEliminar);
        menuArchivos.add(jSeparator1);

        opcionMenuSalir.setMnemonic('o');
        opcionMenuSalir.setText("Salir");
        opcionMenuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuSalirActionPerformed(evt);
            }
        });
        menuArchivos.add(opcionMenuSalir);

        menuBar.add(menuArchivos);

        menuEdición.setMnemonic('e');
        menuEdición.setText("Edición");
        menuEdición.setToolTipText("");

        opcionMenuReemplazar.setMnemonic('t');
        opcionMenuReemplazar.setText("Reemplazar");
        opcionMenuReemplazar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuReemplazarActionPerformed(evt);
            }
        });
        menuEdición.add(opcionMenuReemplazar);

        opcionMenuContar.setMnemonic('y');
        opcionMenuContar.setText("Contar");
        opcionMenuContar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuContarActionPerformed(evt);
            }
        });
        menuEdición.add(opcionMenuContar);

        menuBar.add(menuEdición);

        opcionMenuSobreMi.setMnemonic('h');
        opcionMenuSobreMi.setText("Ayuda");

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("Sobre mi");
        aboutMenuItem.setToolTipText("");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        opcionMenuSobreMi.add(aboutMenuItem);

        menuBar.add(opcionMenuSobreMi);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDesktopPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDesktopPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Este metodo manda a llamar a nuevoArchivo de la clase control para crear
     * un nuevo archivo.
     *
     * @param evt Evento Menu/ Nuevo que sucede cuando se le da click
     */
    private void opcionMenuNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuNuevoActionPerformed
        // TODO add your handling code here:
        if (control.nuevoArchivo(this)) {
            areaTexto.setText("");
            jLabel1.setText("Archivo actual; ");
        }
    }//GEN-LAST:event_opcionMenuNuevoActionPerformed
    /**
     * Este metodo manda a llamar al metodo guardar de la clase control para
     * guardar el archivo.
     *
     * @param evt Evento Menu/ Guardar que sucede cuando se le da click
     */
    private void opcionMenuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuGuardarActionPerformed
        // TODO add your handling code here:
        control.setTexto(areaTexto.getText());
        control.guardarArchivo(this);
        if (control.getNomArchivo() != null) {
            file = new File(control.getNomArchivo());
            jLabel1.setText("Archivo actual; " + file.getName());
        }

    }//GEN-LAST:event_opcionMenuGuardarActionPerformed
    /**
     * Este metodo manda a llamar al metodo abrir de la clase control que abre
     * un determinado archivo.
     *
     * @param evt Evento Menu/ Abrir que sucede cuando se le da click
     */
    private void opcionMenuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuAbrirActionPerformed
        // TODO add your handling code here:
        areaTexto.setText("");
        jLabel1.setText("Archivo actual; ");
        control.abrirArchivo(this);
        areaTexto.setText(control.getTexto());
        if (control.getNomArchivo() != null) {
            file = new File(control.getNomArchivo());
            jLabel1.setText("Archivo actual; " + file.getName());
        }
    }//GEN-LAST:event_opcionMenuAbrirActionPerformed
    /**
     * Este metodo manda a llamar al metodo guardarcomo de la clase control que
     * guarda el archivo.
     *
     * @param evt Evento Menu/ Guardar que sucede cuando se le da click
     */
    private void opcionMenuGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuGuardarComoActionPerformed
        // TODO add your handling code here:
        control.setTexto(areaTexto.getText());
        control.guardarArchivoComo(this);
        if (control.getNomArchivo() != null) {
            file = new File(control.getNomArchivo());
            jLabel1.setText("Archivo actual; " + file.getName());
        }
    }//GEN-LAST:event_opcionMenuGuardarComoActionPerformed
    /**
     * Este metodo manda a llamar al metodo eliminar de la clase control que
     * elimina un archivo.
     *
     * @param evt Evento Menu/ Eliminarque sucede cuando se le da click
     */
    private void opcionMenuEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuEliminarActionPerformed
        // TODO add your handling code here:
        control.eliminarArchivo(this);
        areaTexto.setText("");
        jLabel1.setText("Archivo actual; ");
    }//GEN-LAST:event_opcionMenuEliminarActionPerformed
    /**
     * Metodo que destruye el cuadro de dialogo.
     *
     * @param evt Evento Menu/ Salir que sucede cuando se le da click
     */
    private void opcionMenuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_opcionMenuSalirActionPerformed
    /**
     * Este metodo manda a llamar al metodo reemplazar de la clase control que
     * reemplza determinados cadenas, con apoyo del cuadro de dialogo
     * DlgReemplazar.
     *
     * @param evt Evento Edicion/ Reemplazar que sucede cuando se le da click
     */
    private void opcionMenuReemplazarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuReemplazarActionPerformed
        // TODO add your handling code here:
        control.setTexto(areaTexto.getText());
        control.reemplazar(this);
        areaTexto.setText(control.getTexto());
    }//GEN-LAST:event_opcionMenuReemplazarActionPerformed
    /**
     * Este metodo manda a llamar al metodo contar de la clase control que
     * cuenta las palabras actuales del archivo.
     *
     * @param evt Evento Edicion / Contar que sucede cuando se le da click
     */
    private void opcionMenuContarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuContarActionPerformed
        // TODO add your handling code here:
        try {
            control.contar(this);
        } catch (IOException e) {
            Logger.getLogger(FrmEditor.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_opcionMenuContarActionPerformed
    /**
     * Este metodo muestra una instancia de JOptionPane que muestra mis datos.
     *
     * @param evt Evento Ayuda / Sobre mi que sucede cuando se le da click
     */
    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Programa de asignacion 04 \n"
                + "Hecho X Jose Jesus ID: 00000229141 \n"
                + "Semestre Agosto - Diciembre 2021\n");
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmEditor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JTextArea areaTexto;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu menuArchivos;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuEdición;
    private javax.swing.JMenuItem opcionMenuAbrir;
    private javax.swing.JMenuItem opcionMenuContar;
    private javax.swing.JMenuItem opcionMenuEliminar;
    private javax.swing.JMenuItem opcionMenuGuardar;
    private javax.swing.JMenuItem opcionMenuGuardarComo;
    private javax.swing.JMenuItem opcionMenuNuevo;
    private javax.swing.JMenuItem opcionMenuReemplazar;
    private javax.swing.JMenuItem opcionMenuSalir;
    private javax.swing.JMenu opcionMenuSobreMi;
    // End of variables declaration//GEN-END:variables

}
